(window.webpackJsonp=window.webpackJsonp||[]).push([[10],{81:function(e,n,r){"use strict";r.r(n),r.d(n,"frontMatter",(function(){return i})),r.d(n,"metadata",(function(){return s})),r.d(n,"toc",(function(){return l})),r.d(n,"default",(function(){return d}));var t=r(3),a=r(7),o=(r(0),r(92)),i={id:"Shaders",title:"Shaders",sidebar_label:"Shaders",slug:"/CodeManual/Shaders"},s={unversionedId:"CodeManual/Shaders",id:"CodeManual/Shaders",isDocsHomePage:!1,title:"Shaders",description:"Shaders are represented in code by `GLEngine::CShaderManager`. You can also load them by yourself, but then you lose most of the functions.",source:"@site/docs/CodeManual/Shaders.md",slug:"/CodeManual/Shaders",permalink:"/docs/CodeManual/Shaders",editUrl:"https://github.com/MySchoolEngine/GLEngine/edit/master/website/docs/CodeManual/Shaders.md",version:"current",sidebar_label:"Shaders",sidebar:"CodeManual",previous:{title:"Architecture",permalink:"/docs/CodeManual/"},next:{title:"Entity component system",permalink:"/docs/CodeManual/ECS"}},l=[{value:"Shader definition",id:"shader-definition",children:[]},{value:"Preprocess",id:"preprocess",children:[]},{value:"RegExes",id:"regexes",children:[]},{value:"Live reload",id:"live-reload",children:[]},{value:"Binding",id:"binding",children:[]}],c={toc:l};function d(e){var n=e.components,r=Object(a.a)(e,["components"]);return Object(o.b)("wrapper",Object(t.a)({},c,r,{components:n,mdxType:"MDXLayout"}),Object(o.b)("p",null,"Shaders are represented in code by ",Object(o.b)("inlineCode",{parentName:"p"},"GLEngine::GLRenderer::Shaders::C_ShaderProgram")," class and can be loaded by ",Object(o.b)("inlineCode",{parentName:"p"},"GLEngine::GLRenderer::Shaders::C_ShaderManager"),". You can also load them by yourself, but then you lose most of the functions."),Object(o.b)("h2",{id:"shader-definition"},"Shader definition"),Object(o.b)("p",null,"To define shader you have to define its a structure in XML format. Here is an example of how to define simple shader."),Object(o.b)("pre",null,Object(o.b)("code",{parentName:"pre",className:"language-xml"},'<?xml version="1.0" encoding="UTF-8"?>\n<pipeline>\n  <shader stage="vertex">basic/vertex.glsl</shader>\n  <shader stage="fragment">basic/fragment.glsl</shader>\n</pipeline>\n')),Object(o.b)("h2",{id:"preprocess"},"Preprocess"),Object(o.b)("p",null,"Actual shader preprocessor supports two main features. Include file and macro definitions. It works pretty similarly to the C++ preprocessor. RegExes used to detect preprocessor directives are listed below. Include file looks for the file relative to the parsed ","*",".glsl file, so you can easily find what is going on. Also, it doesn't work recursively right now (this means no #include inside of included file)."),Object(o.b)("h2",{id:"regexes"},"RegExes"),Object(o.b)("ul",null,Object(o.b)("li",{parentName:"ul"},'Includes: ^(#include )"(',Object(o.b)("sup",{parentName:"li",id:'fnref-"'},Object(o.b)("a",{parentName:"sup",href:'#fn-"',className:"footnote-ref"},'"')),'*)"$'),Object(o.b)("li",{parentName:"ul"},"Defines: ^(#define )(",Object(o.b)("sup",{parentName:"li",id:"fnref-\\s"},Object(o.b)("a",{parentName:"sup",href:"#fn-\\s",className:"footnote-ref"},"\\s")),"*)\\s(",Object(o.b)("sup",{parentName:"li",id:"fnref-\\s"},Object(o.b)("a",{parentName:"sup",href:"#fn-\\s",className:"footnote-ref"},"\\s")),"+)$")),Object(o.b)("h2",{id:"live-reload"},"Live reload"),Object(o.b)("p",null,"If you load shader program via ",Object(o.b)("inlineCode",{parentName:"p"},"C_ShaderManager")," and you are running in Debug configuration, you can live-edit your shader programmes. The shader program will be reloaded every one second. You can change its code and even its structure in XML."),Object(o.b)("h2",{id:"binding"},"Binding"),Object(o.b)("p",null,"Default binding is ascending from 0 - least often changed descriptor set down to most often changed descriptor sets. 0 - Frame constants 1 - Reserved 2 - Per draw call changes (effectively modelData) 3 - Materials (temp) 4 - Lights (temp)"))}d.isMDXComponent=!0},92:function(e,n,r){"use strict";r.d(n,"a",(function(){return u})),r.d(n,"b",(function(){return b}));var t=r(0),a=r.n(t);function o(e,n,r){return n in e?Object.defineProperty(e,n,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[n]=r,e}function i(e,n){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var t=Object.getOwnPropertySymbols(e);n&&(t=t.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),r.push.apply(r,t)}return r}function s(e){for(var n=1;n<arguments.length;n++){var r=null!=arguments[n]?arguments[n]:{};n%2?i(Object(r),!0).forEach((function(n){o(e,n,r[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):i(Object(r)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(r,n))}))}return e}function l(e,n){if(null==e)return{};var r,t,a=function(e,n){if(null==e)return{};var r,t,a={},o=Object.keys(e);for(t=0;t<o.length;t++)r=o[t],n.indexOf(r)>=0||(a[r]=e[r]);return a}(e,n);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(t=0;t<o.length;t++)r=o[t],n.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(a[r]=e[r])}return a}var c=a.a.createContext({}),d=function(e){var n=a.a.useContext(c),r=n;return e&&(r="function"==typeof e?e(n):s(s({},n),e)),r},u=function(e){var n=d(e.components);return a.a.createElement(c.Provider,{value:n},e.children)},p={inlineCode:"code",wrapper:function(e){var n=e.children;return a.a.createElement(a.a.Fragment,{},n)}},f=a.a.forwardRef((function(e,n){var r=e.components,t=e.mdxType,o=e.originalType,i=e.parentName,c=l(e,["components","mdxType","originalType","parentName"]),u=d(r),f=t,b=u["".concat(i,".").concat(f)]||u[f]||p[f]||o;return r?a.a.createElement(b,s(s({ref:n},c),{},{components:r})):a.a.createElement(b,s({ref:n},c))}));function b(e,n){var r=arguments,t=n&&n.mdxType;if("string"==typeof e||t){var o=r.length,i=new Array(o);i[0]=f;var s={};for(var l in n)hasOwnProperty.call(n,l)&&(s[l]=n[l]);s.originalType=e,s.mdxType="string"==typeof e?e:t,i[1]=s;for(var c=2;c<o;c++)i[c]=r[c];return a.a.createElement.apply(null,i)}return a.a.createElement.apply(null,r)}f.displayName="MDXCreateElement"}}]);